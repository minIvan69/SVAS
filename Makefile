# –§–∞–π–ª –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
ENV_FILE = .env

# –ö–æ–º–∞–Ω–¥–∞ –∑–∞–ø—É—Å–∫–∞ docker compose
DC = docker compose --env-file $(ENV_FILE)

# üõ†Ô∏è –ü–æ—Å—Ç—Ä–æ–∏—Ç—å –æ–±—Ä–∞–∑—ã (—Å –∫—ç—à–µ–º)
build:
	$(DC) build

# üßº –ü–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å –æ–±—Ä–∞–∑—ã (–±–µ–∑ –∫—ç—à–∞)
rebuild:
	$(DC) build --no-cache

# üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
up:
	$(DC) up

# üöÄ –ü–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
up-build:
	$(DC) up --build

# üõë –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
down:
	$(DC) down

# üßπ –£–¥–∞–ª–∏—Ç—å –≤—Å–µ dangling –æ–±—Ä–∞–∑—ã
prune-images:
	docker image prune -f

# üßπ –£–¥–∞–ª–∏—Ç—å –≤—Å—ë, —á—Ç–æ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è (–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã, —Ç–æ–º–∞, —Å–µ—Ç–∏ –∏ –æ–±—Ä–∞–∑—ã)
prune-all:
	docker system prune -a --volumes -f

# üí£ –ü–æ–ª–Ω–∞—è –∑–∞—á–∏—Å—Ç–∫–∞: –æ—Å—Ç–∞–Ω–æ–≤–∫–∞, —É–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤, —É–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –æ–±—Ä–∞–∑–æ–≤
nuke:
	$(DC) down -v --rmi all --remove-orphans
	docker system prune -a --volumes -f

# üëÄ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏
logs:
	$(DC) logs -f

# üê≥ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å, —á—Ç–æ –∑–∞–ø—É—â–µ–Ω–æ
ps:
	$(DC) ps

# üîÅ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
restart:
	@read -p "Enter container name to restart: " name; \
	docker compose restart $$name

# üîÅ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —á–µ—Ä–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç (make restart-one name=flask_app):
restart-one:
	@if [ -z "$(name)" ]; then \
		echo "‚ùå Usage: make restart-one name=container_name"; \
	else \
		docker compose restart $(name); \
	fi

# üîÅ –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –∏ —Ä–µ—Å—Ç–∞—Ä—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ (make rebuild-one name=flask_app)
rebuild-one:
	@if [ -z "$(name)" ]; then \
		echo "‚ùå Usage: make rebuild-one name=container_name"; \
	else \
		docker compose build $(name); \
		docker compose stop $(name); \
		docker compose up -d $(name); \
	fi

# üêö –ó–∞–π—Ç–∏ –≤–Ω—É—Ç—Ä—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ (bash)
shell:
	@if [ -z "$(name)" ]; then \
		echo "‚ùå Usage: make shell name=container_name"; \
	else \
		docker exec -it $(name) /bin/bash || docker exec -it $(name) /bin/sh; \
	fi

# üìú –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
logs-one:
	@if [ -z "$(name)" ]; then \
		echo "‚ùå Usage: make logs-one name=container_name"; \
	else \
		docker compose logs -f $(name); \
	fi