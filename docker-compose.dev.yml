version: "3.8"

services:
  db:
    image: pgvector/pgvector:pg15
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: voiceid
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  rabbit:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"

  migrate:
    build:
      context: . # ← корень репо, а не services/worker
      dockerfile: services/worker/Dockerfile
    command: alembic upgrade head
    environment:
      DB_URL_SYNC: "postgresql+psycopg://postgres:${POSTGRES_PASSWORD}@db/voiceid"
      DB_URL_ASYNC: "postgresql+asyncpg://postgres:${POSTGRES_PASSWORD}@db/voiceid"
    depends_on:
      - db

  api:
    build:
      context: . # корень репозитория
      dockerfile: services/api/Dockerfile
    environment:
      UPLOAD_DIR: "/app/uploads"
      DB_URL_ASYNC: "postgresql+asyncpg://postgres:${POSTGRES_PASSWORD}@db/voiceid"
      RABBIT_URL: "amqp://guest:guest@rabbit//"
      API_KEY: "${API_KEY}"
    depends_on: [db, rabbit, migrate]
    ports:
      - "8000:8000"
    command: uvicorn services.api.app:app --host 0.0.0.0 --reload
    volumes:
      - ./uploads:/app/uploads

  worker:
    # build: ./services/worker
    build:
      context: . # ← корень репо, а не services/worker
      dockerfile: services/worker/Dockerfile
    environment:
      DB_URL_ASYNC: postgresql+asyncpg://postgres:${POSTGRES_PASSWORD}@db/voiceid
      DB_URL_SYNC: postgresql+psycopg://postgres:${POSTGRES_PASSWORD}@db/voiceid
      RABBIT_URL: "amqp://guest:guest@rabbit//"
    depends_on: [db, rabbit, migrate]

    command: >
      bash -c "export PYTHONPATH=/app &&
      celery -A services.worker.core.celery_app:celery_app worker -l info
      "
    volumes:
      - ./services:/app/services
      - ./uploads:/app/uploads

volumes:
  pgdata:
